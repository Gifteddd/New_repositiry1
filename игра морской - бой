import random

class Ship:
    def __init__(self, coordinates):
        self.coordinates = coordinates
        self.hits = set()

    def is_hit(self, coordinate):
        return coordinate in self.coordinates

    def take_hit(self, coordinate):
        self.hits.add(coordinate)

    def is_sunk(self):
        return len(self.hits) == len(self.coordinates)

class Board:
    def __init__(self, size, ships):
        self.size = size
        self.ships = ships
        self.board = [['O' for _ in range(size)] for _ in range(size)]
        self.hits = set()

    def place_ships(self):
        for ship in self.ships:
            for coordinate in ship.coordinates:
                row, col = coordinate
                self.board[row][col] = '■'

    def display(self):
        print('   |', end='')
        for col in range(self.size):
            print(f' {col+1} |', end='')
        print()
        print('---+' + '----+' * self.size)
        for row in range(self.size):
            print(f' {row+1} |', end='')
            for col in range(self.size):
                cell = self.board[row][col]
                if (row, col) in self.hits:
                    if cell == '■':
                        print(' Х |', end='')
                    else:
                        print(' Т |', end='')
                else:
                    print(f' {cell} |', end='')
            print()
            print('---+' + '----+' * self.size)

    def is_valid_coordinate(self, coordinate):
        row, col = coordinate
        return 0 <= row < self.size and 0 <= col < self.size

    def is_empty_coordinate(self, coordinate):
        row, col = coordinate
        return self.board[row][col] == 'O'

    def is_already_hit(self, coordinate):
        return coordinate in self.hits

    def shoot(self, coordinate):
        if not self.is_valid_coordinate(coordinate):
            raise ValueError('Неверная координата')
        if self.is_already_hit(coordinate):
            raise ValueError('Вы уже стреляли по этой координате')
        self.hits.add(coordinate)
        row, col = coordinate
        if self.board[row][col] == '■':
            for ship in self.ships:
                if coordinate in ship.coordinates:
                    ship.take_hit(coordinate)
            return True
        else:
            return False

def generate_ships():
    ships = []
    ship1_coordinates = [(0, 0), (0, 1), (0, 2)]
    ship1 = Ship(ship1_coordinates)
    ships.append(ship1)
    ship2_coordinates = [(2, 0), (2, 1)]
    ship2 = Ship(ship2_coordinates)
    ships.append(ship2)
    ship3_coordinates = [(4, 0), (4, 1)]
    ship3 = Ship(ship3_coordinates)
    ships.append(ship3)
    ship4_coordinates = [(0, 4)]
    ship4 = Ship(ship4_coordinates)
    ships.append(ship4)
    ship5_coordinates = [(1, 5)]
    ship5 = Ship(ship5_coordinates)
    ships.append(ship5)
    ship6_coordinates = [(3, 3)]
    ship6 = Ship(ship6_coordinates)
    ships.append(ship6)
    ship7_coordinates = [(4, 4)]
    ship7 = Ship(ship7_coordinates)
    ships.append(ship7)
    return ships

def play_game():
    print("Добро пожаловать в игру 'Морской бой'!")
    print("Правила игры:")
    print("Вы и компьютер по очереди выбираете координаты на игровом поле, чтобы атаковать корабли противника.")
    print("Ваше поле отображает ваши атаки и попадания, а поле компьютера отображает ваши атаки и попадания компьютера.")
    print("Выигрывает тот, кто первым потопит все корабли противника.")
    print("Удачи!")

    size = 6
    ships = generate_ships()
    player_board = Board(size, ships)
    computer_board = Board(size, ships)
    computer_shots = set()

    player_board.place_ships()
    computer_board.place_ships()

    player_turn = True
    while True:
        print("Доска игрока:")
        player_board.display()
        print("Компьютерная доска:")
        computer_board.display()

        if player_turn:
            try:
                row = int(input('Введите координату строки: '))
                col = int(input('Введите координату столбца: '))
                coordinate = (row - 1, col - 1)
                hit = computer_board.shoot(coordinate)
                if hit:
                    print('Вы попали в корабль!')
                    player_turn = True  # Ход игрока продолжается до промаха
                else:
                    print('Вы промахнулись!')
                    player_turn = False  # Ход переходит к компьютеру
                if all(ship.is_sunk() for ship in computer_board.ships):
                    print('Поздравляем! Вы выиграли игру!')
                    break
            except ValueError as e:
                print(e)
                continue
        else:
            print('Ход компьютера...')
            while True:
                row = random.randint(0, size - 1)
                col = random.randint(0, size - 1)
                coordinate = (row, col)
                if coordinate not in computer_shots:
                    break
            hit = player_board.shoot(coordinate)
            if hit:
                print('Компьютер попал в ваш корабль!')
                player_turn = False  # Ход компьютера продолжается до промаха
            else:
                print('Компьютер промахнулся!')
                player_turn = True  # Ход переходит к игроку
            if all(ship.is_sunk() for ship in player_board.ships):
                print('Вы проиграли игру!')
                break
            computer_shots.add(coordinate)

play_game()
